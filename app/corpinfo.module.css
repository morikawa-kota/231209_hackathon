.main-content {
  margin: 30px;
}

.contnet {
  padding-bottom: 2%;
}

.info-text {
  color: #9C9DBB;
  width: 117px;
  position: relative;
}

.group {
  display: flex;
  margin-top: 10px;
  margin-bottom: 20px;
}

.campany-name, .campany-address, .job-name, .employee-style, .money-style, .input-text-area {
  background-color: white;
  border-radius: 8px;
}

.campany-name, .campany-address, .job-name {
  width: 280px;
  height: 50px;
}

.employee-style, .money-style {
  width: 140px;
  height: 50px;
}

.input-text-area{
  width: 100%;
  margin-left: 5px;
}

.tag-module {
  height: 50px;
}

.mg-right-5 {
  margin-right: 10px;
}

.button-module {
  border: none;
  border-radius: 5px;
  margin-right: 10px;
  margin-left: 10px;
  width: 120px;
  height: 50px;
}

.func-submit {
  background-color: #0094FF;
}

.add-info {
  position: relative;
  top: 50%;
  left: 50%;
  right: -50%;
  width: 150px;
}

.info-circle {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border-color: #0094FF;
  background-color: white;
  display: inline-block;
  position: relative;
  top: -1%;
  right: 5%;
}

.info-cross {
  display: inline-block;
  flex-direction: column;
  position: relative;
  top: -2%;
}

.info-cross div {
  width: 7px;
  height: 2px;
  background-color: #0094FF;
}

.info-cross :nth-child(1) {
  transform: rotate(-90deg) translate(-2px);
}

.option-icon {
  display: flex;
  cursor: pointer;
  margin: 0 5px;
  top: 50%;
  border-radius: 50%;
  background-color: #D9D9D9;
  width: 30px;
  height: 30px;
}

.option-icon div {
  width: 3px;
  height: 3px;
  background-color: white;
  margin: 6px 3px;
  transition: 0.4s;
  position: relative;
  top: 20%;
  left: 8%;
}

.option {
  display: none;
  flex-direction: column;
  align-items: center;
  position: relative;
  background-color: #f9f9f9;
  border-radius: 8px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  padding: 10px;
  left: 20px;
  z-index: 1;
}

.option.active {
  display: flex;
}

.option-item {
  padding: 10px;
  cursor: pointer;
  color: black;
  width: 350px;
}

.option-item:hover {
  background-color: #ddd;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}
